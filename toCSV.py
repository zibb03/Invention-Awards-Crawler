import csv

data_list = [{'번호': '15512', '연도': '2024', '분야': '고등학교', '제목': '(지도논문) 흔들흔들 수동 입제 살포기-골고루에 관한 지도연구', '수상': '등급 외', '지도교사': '', '수상자': '마인용'}, {'번호': '15511', '연도': '2024', '분야': '고등학교', '제목': '(지도논문) 다양한 시공간에서 활용 가능한 UV 회절 조류 충동 방지 장치 발명지도를 통한 과학적 문제해결 역량 함양', '수상': '등급 외', '지도교사': '', '수상자': '이가람'}, {'번호': '15510', '연도': '2024', '분야': '고등학교', '제목': '(지도논문) 환경친화적이고 안전한 DIY 렌즈 실험 장치 연구 지도', '수상': '등급 외', '지도교사': '', '수상자': '하병수'}, {'번호': '15509', '연도': '2024', '분야': '고등학교', '제목': '(지도논문) 「화물차 바퀴이탈사고 예방을 위한 볼트」제작 지도를 통한 학생 역량 증진 및 진로 연계 지도', '수상': '1등급(특상)', '지도교사': '', '수상자': '김석봉'}, {'번호': '15508', '연도': '2024', '분야': '고등학교', '제목': '(지도논문) 필충 필터 교체장치 한번 만나볼래! 제작 지도', '수상': '3등급(장려상)', '지도교사': '', '수상자': '오지훈'}, {'번호': '15507', '연도': '2024', '분야': '고등학교', '제목': '(지도논문) 개선된 걸고리 꽂이쇠와 자물쇠 제작 지도', '수상': '등급 외', '지도교사': '', '수상자': '이성호'}, {'번호': '15506', '연도': '2024', '분야': '고등학교', '제목': '(지도논문) 여러 천체망원경 보조기구 직경을 변환하는 만능 어뎁터 제작 지도', '수상': '등급 외', '지도교사': '', '수상자': '나도선'}, {'번호': '15505', '연도': '2024', '분야': '고등학교', '제목': '(지도논문) 청각 장애인을 위한 3차원 수화인식 번역기 지도 연구', '수상': '3등급(장려상)', '지도교사': '', '수상자': '유민숙'}, {'번호': '15504', '연도': '2024', '분야': '고등학교', '제목': '(지도논문) 진화론과 발문을 통한 효율적인 지네 멀티탭 발명품 지도', '수상': '등급 외', '지도교사': '', '수상자': '김민철'}, {'번호': '15503', '연도': '2024', '분야': '고등학교', '제목': '(지도논문) 주행 중 발생되는 미세먼지를 정전기 원리로 제거하는 무동력 집진장치 연구 지도', '수상': '등급 외', '지도교사': '', '수상자': '정근영'}]


def save_to_csv(data, filename="award_data.csv"):
    """
    딕셔너리 형태의 리스트 데이터를 CSV 파일로 저장합니다.

    Args:
        data (list): 저장할 딕셔너리 리스트. 각 딕셔너리는 CSV 파일의 한 행이 됩니다.
                     딕셔너리의 키는 CSV 파일의 헤더(열 이름)가 됩니다.
        filename (str, optional): 저장할 CSV 파일 이름. 기본값은 "award_data.csv"입니다.
    """
    if not data:
        print("저장할 데이터가 없습니다.")
        return

    fieldnames = data[0].keys()  # 첫 번째 딕셔너리의 키를 헤더로 사용

    try:
        with open(filename, 'w', newline='', encoding='utf-8-sig') as csvfile:
            writer = csv.DictWriter(csvfile, fieldnames=fieldnames)

            writer.writeheader()  # 헤더 행 쓰기
            writer.writerows(data)  # 데이터 행 쓰기

        print(f"'{filename}' 파일에 성공적으로 저장되었습니다.")

    except Exception as e:
        print(f"CSV 파일 저장 중 오류가 발생했습니다: {e}")

if __name__ == "__main__":
    save_to_csv(data_list)